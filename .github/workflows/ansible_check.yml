name: Test Ansible Roles with Molecule

# Trigger workflow
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  ROLES_DIRECTORY: "ansible-molecule/server/roles"
  PY_COLORS: "1"
  ANSIBLE_FORCE_COLOR: "1"

jobs:
  # Job untuk menemukan semua roles yang memiliki molecule config
  find-roles:
    runs-on: ubuntu-latest
    outputs:
      roles: ${{ steps.find-roles.outputs.roles }}
      roles-count: ${{ steps.find-roles.outputs.count }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Find roles with molecule tests
        id: find-roles
        run: |
          if [ -d "${{ env.ROLES_DIRECTORY }}" ]; then
            # Cari roles yang memiliki molecule directory atau molecule.yml
            roles_array=()
            
            for role_dir in ${{ env.ROLES_DIRECTORY }}/*/; do
              if [ -d "$role_dir" ]; then
                role_name=$(basename "$role_dir")
                
                # Check jika role memiliki molecule config
                if [ -d "$role_dir/molecule" ] || [ -f "$role_dir/molecule.yml" ]; then
                  roles_array+=("$role_name")
                  echo "Found role with molecule config: $role_name"
                else
                  echo "Role $role_name doesn't have molecule config, skipping..."
                fi
              fi
            done
            
            # Convert array to JSON
            if [ ${#roles_array[@]} -gt 0 ]; then
              roles_json=$(printf '%s\n' "${roles_array[@]}" | jq -R . | jq -s .)
              count=${#roles_array[@]}
            else
              roles_json="[]"
              count=0
            fi
            
            echo "roles<<EOF" >> $GITHUB_OUTPUT
            echo "$roles_json" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
            echo "count=$count" >> $GITHUB_OUTPUT
            echo "Total roles with molecule tests: $count"
          else
            echo "roles=[]" >> $GITHUB_OUTPUT
            echo "count=0" >> $GITHUB_OUTPUT
            echo "Directory ${{ env.ROLES_DIRECTORY }} not found"
          fi

  # Job untuk testing setiap role dengan molecule
  test-roles:
    needs: find-roles
    if: needs.find-roles.outputs.roles-count > 0
    runs-on: ubuntu-latest
    strategy:
      matrix:
        role: ${{ fromJson(needs.find-roles.outputs.roles) }}
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Setup Docker
        run: |
          # Ensure Docker daemon is running
          sudo systemctl start docker
          sudo systemctl enable docker

          # Add current user to docker group
          sudo usermod -aG docker $USER

          # Restart docker to ensure clean state
          sudo systemctl restart docker

          # Wait for docker to be ready
          timeout 30 bash -c 'until docker info > /dev/null 2>&1; do sleep 1; done'

          # Verify docker is working
          docker --version
          docker info

      - name: Install Molecule and dependencies
        run: |
          apt install python3 python3-pip python3-venv
          python3 -m venv ansible-venv
          source ansible-venv/bin/activate
          pip install --upgrade pip
          pip install ansible molecule molecule-docker ansible-lint testinfra
          # Verify installations
          molecule --version
          ansible --version
          docker --version

      - name: Check molecule configuration
        run: |
          echo "=== Checking molecule configuration for role: ${{ matrix.role }} ==="
          role_path="${{ env.ROLES_DIRECTORY }}/${{ matrix.role }}"

          if [ -d "$role_path/molecule" ]; then
            echo "‚úÖ Found molecule directory"
            ls -la "$role_path/molecule/"
            
            # Check for molecule scenarios
            scenarios=$(find "$role_path/molecule" -maxdepth 1 -type d -not -name "molecule" | wc -l)
            if [ $scenarios -gt 0 ]; then
              echo "‚úÖ Found $scenarios molecule scenarios"
              find "$role_path/molecule" -maxdepth 1 -type d -not -name "molecule" -exec basename {} \;
            else
              echo "‚ö†Ô∏è No molecule scenarios found, will use default"
            fi
          elif [ -f "$role_path/molecule.yml" ]; then
            echo "‚úÖ Found molecule.yml file"
          else
            echo "‚ùå No molecule configuration found"
            exit 1
          fi

      - name: Pre-flight Docker Check
        run: |
          echo "=== Docker Pre-flight Check ==="
          # Check if docker daemon is accessible
          if ! docker info > /dev/null 2>&1; then
            echo "‚ùå Docker daemon not accessible"
            sudo systemctl status docker
            exit 1
          fi

          # Test basic docker functionality
          docker run --rm hello-world
          echo "‚úÖ Docker is working correctly"

      - name: Run Molecule Test
        run: |
          echo "=== Running Molecule test for role: ${{ matrix.role }} ==="
          cd "${{ env.ROLES_DIRECTORY }}/${{ matrix.role }}"

          # Set working directory untuk molecule
          export MOLECULE_PROJECT_DIRECTORY=$(pwd)

          # Ensure clean state
          echo "Cleaning up any existing containers..."
          molecule destroy --all || true

          # Wait a bit for cleanup
          sleep 5

          # Run molecule test dengan verbose output dan better error handling
          echo "Starting molecule test..."
          if molecule test --all --parallel; then
            echo "‚úÖ Molecule test passed for role: ${{ matrix.role }}"
          else
            echo "‚ùå Molecule test failed for role: ${{ matrix.role }}"
            echo "=== Debugging Information ==="
            echo "Docker containers:"
            docker ps -a
            echo "Docker images:"
            docker images
            echo "Docker system info:"
            docker system df
            exit 1
          fi

      - name: Cleanup containers (always run)
        if: always()
        run: |
          echo "=== Cleaning up Docker containers for role: ${{ matrix.role }} ==="
          cd "${{ env.ROLES_DIRECTORY }}/${{ matrix.role }}" || exit 0

          # Force cleanup with better error handling
          molecule destroy --all || echo "Molecule destroy failed, continuing with manual cleanup"

          # Manual cleanup of containers that might be stuck
          docker ps -aq --filter "label=molecule" | xargs -r docker rm -f || true
          docker network ls --filter "label=molecule" -q | xargs -r docker network rm || true

          # Clean up unused resources
          docker system prune -f || true

          echo "‚úÖ Cleanup completed"

      - name: Role Test Result
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "üéâ SUCCESS: Role '${{ matrix.role }}' passed molecule tests!"
          else
            echo "üí• FAILURE: Role '${{ matrix.role }}' failed molecule tests!"
            echo "Check the logs above for detailed error information."
          fi
