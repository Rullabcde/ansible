name: Test Ansible Roles with Molecule

# Trigger workflow
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  ROLES_DIRECTORY: "ansible-molecule/server/roles"
  PY_COLORS: "1"
  ANSIBLE_FORCE_COLOR: "1"

jobs:
  # Job untuk menemukan semua roles yang memiliki molecule config
  find-roles:
    runs-on: ubuntu-latest
    outputs:
      roles: ${{ steps.find-roles.outputs.roles }}
      roles-count: ${{ steps.find-roles.outputs.count }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Find roles with molecule tests
        id: find-roles
        run: |
          if [ -d "${{ env.ROLES_DIRECTORY }}" ]; then
            # Cari roles yang memiliki molecule directory atau molecule.yml
            roles_array=()
            
            for role_dir in ${{ env.ROLES_DIRECTORY }}/*/; do
              if [ -d "$role_dir" ]; then
                role_name=$(basename "$role_dir")
                
                # Check jika role memiliki molecule config
                if [ -d "$role_dir/molecule" ] || [ -f "$role_dir/molecule.yml" ]; then
                  roles_array+=("$role_name")
                  echo "Found role with molecule config: $role_name"
                else
                  echo "Role $role_name doesn't have molecule config, skipping..."
                fi
              fi
            done
            
            # Convert array to JSON
            if [ ${#roles_array[@]} -gt 0 ]; then
              roles_json=$(printf '%s\n' "${roles_array[@]}" | jq -R . | jq -s .)
              count=${#roles_array[@]}
            else
              roles_json="[]"
              count=0
            fi
            
            #echo "roles=$roles_json" >> $GITHUB_OUTPUT
            echo "roles<<EOF" >> $GITHUB_OUTPUT
            echo "$roles_json" >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
            echo "count=$count" >> $GITHUB_OUTPUT
            echo "Total roles with molecule tests: $count"
          else
            echo "roles=[]" >> $GITHUB_OUTPUT
            echo "count=0" >> $GITHUB_OUTPUT
            echo "Directory ${{ env.ROLES_DIRECTORY }} not found"
          fi

  # Job untuk testing setiap role dengan molecule
  test-roles:
    needs: find-roles
    if: needs.find-roles.outputs.roles-count > 0
    runs-on: ubuntu-latest
    strategy:
      matrix:
        role: ${{ fromJson(needs.find-roles.outputs.roles) }}
      fail-fast: false

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install Docker
        run: |
          docker --version

      - name: Install Molecule and dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ansible molecule molecule-docker ansible-lint testinfra
          molecule --version
          ansible --version

      - name: Check molecule configuration
        run: |
          echo "=== Checking molecule configuration for role: ${{ matrix.role }} ==="
          role_path="${{ env.ROLES_DIRECTORY }}/${{ matrix.role }}"

          if [ -d "$role_path/molecule" ]; then
            echo "✅ Found molecule directory"
            ls -la "$role_path/molecule/"
            
            # Check for molecule scenarios
            scenarios=$(find "$role_path/molecule" -maxdepth 1 -type d -not -name "molecule" | wc -l)
            if [ $scenarios -gt 0 ]; then
              echo "✅ Found $scenarios molecule scenarios"
              find "$role_path/molecule" -maxdepth 1 -type d -not -name "molecule" -exec basename {} \;
            else
              echo "⚠️ No molecule scenarios found, will use default"
            fi
          elif [ -f "$role_path/molecule.yml" ]; then
            echo "✅ Found molecule.yml file"
          else
            echo "❌ No molecule configuration found"
            exit 1
          fi

      - name: Run Molecule Test
        run: |
          echo "=== Running Molecule test for role: ${{ matrix.role }} ==="
          cd "${{ env.ROLES_DIRECTORY }}/${{ matrix.role }}"

          # Set working directory untuk molecule
          export MOLECULE_PROJECT_DIRECTORY=$(pwd)

          # Run molecule test dengan verbose output
          if molecule test --all; then
            echo "✅ Molecule test passed for role: ${{ matrix.role }}"
          else
            echo "❌ Molecule test failed for role: ${{ matrix.role }}"
            exit 1
          fi

      - name: Cleanup containers (if any failed)
        if: failure()
        run: |
          echo "=== Cleaning up Docker containers for role: ${{ matrix.role }} ==="
          cd "${{ env.ROLES_DIRECTORY }}/${{ matrix.role }}"
          molecule destroy --all || true
          docker system prune -f || true

      - name: Role Test Result
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "🎉 SUCCESS: Role '${{ matrix.role }}' passed molecule tests!"
          else
            echo "💥 FAILURE: Role '${{ matrix.role }}' failed molecule tests!"
          fi

  # Job untuk generate final report
  test-summary:
    needs: [find-roles, test-roles]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Generate Test Summary
        run: |
          echo "# 🧪 Molecule Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          total_roles="${{ needs.find-roles.outputs.roles-count }}"

          if [ "$total_roles" -eq 0 ]; then
            echo "⚠️ **No roles with molecule configuration found**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Make sure your roles have molecule directory or molecule.yml file in: \`${{ env.ROLES_DIRECTORY }}\`" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Expected structure:" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            echo "${{ env.ROLES_DIRECTORY }}/" >> $GITHUB_STEP_SUMMARY
            echo "├── role1/" >> $GITHUB_STEP_SUMMARY
            echo "│   ├── molecule/" >> $GITHUB_STEP_SUMMARY
            echo "│   │   └── default/" >> $GITHUB_STEP_SUMMARY
            echo "│   │       ├── molecule.yml" >> $GITHUB_STEP_SUMMARY
            echo "│   │       └── converge.yml" >> $GITHUB_STEP_SUMMARY
            echo "│   └── tasks/" >> $GITHUB_STEP_SUMMARY
            echo "│       └── main.yml" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            exit 0
          fi

          echo "**Total Roles Tested:** $total_roles" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Check test-roles job status
          if [ "${{ needs.test-roles.result }}" == "success" ]; then
            echo "## ✅ MOLECULE TEST RESULTS: SUCCESS" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "🎉 **All $total_roles roles passed molecule tests successfully!**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### What was tested:" >> $GITHUB_STEP_SUMMARY
            echo "- **Role deployment** in isolated containers" >> $GITHUB_STEP_SUMMARY
            echo "- **Idempotency** checks" >> $GITHUB_STEP_SUMMARY
            echo "- **Custom verification** (if configured)" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ needs.test-roles.result }}" == "failure" ]; then
            echo "## ❌ MOLECULE TEST RESULTS: FAILURE" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "💥 **Some roles failed molecule tests.**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Check the individual job logs for detailed error information." >> $GITHUB_STEP_SUMMARY
          else
            echo "## ⚠️ MOLECULE TEST RESULTS: SKIPPED/CANCELLED" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Tests were skipped or cancelled." >> $GITHUB_STEP_SUMMARY
          fi

      - name: Final Status Check
        run: |
          total_roles="${{ needs.find-roles.outputs.roles-count }}"

          if [ "$total_roles" -eq 0 ]; then
            echo "⚠️ No roles with molecule configuration found to test"
            exit 0
          fi

          if [ "${{ needs.test-roles.result }}" == "success" ]; then
            echo "🎉 SUCCESS: All roles passed molecule tests!"
            exit 0
          else
            echo "💥 FAILURE: Some roles failed molecule tests!"
            exit 1
          fi

  # Job untuk memberikan setup guidance jika tidak ada molecule config
  setup-guidance:
    needs: find-roles
    if: needs.find-roles.outputs.roles-count == 0
    runs-on: ubuntu-latest
    steps:
      - name: Provide Setup Guidance
        run: |
          echo "📚 Setup Guidance for Molecule Testing" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "To enable molecule testing for your roles, you need to initialize molecule in each role:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 1. Install molecule:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "pip install molecule[docker]" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 2. Initialize molecule in your role:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "cd ${{ env.ROLES_DIRECTORY }}/your-role-name" >> $GITHUB_STEP_SUMMARY
          echo "molecule init scenario --driver-name docker" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 3. Test your role locally:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "molecule test" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
