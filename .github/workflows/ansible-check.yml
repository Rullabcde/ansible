name: Check Roles

on:
  push:
    paths:
      - "provisioning-server/roles/**"
      - "provisioning-server/site.yml"
  pull_request:
    paths:
      - "provisioning-server/roles/**"
      - "provisioning-server/site.yml"
  workflow_dispatch:

jobs:
  check-roles:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python & Ansible
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install Ansible
        run: |
          pip install ansible ansible-lint

      - name: Check roles structure
        run: |
          cd provisioning-server

          echo "üîç Checking roles in provisioning-server/roles..."

          # Check if roles directory exists
          if [ ! -d "roles" ]; then
            echo "‚ùå ERROR: roles directory not found!"
            exit 1
          fi

          # Get all roles
          ROLES=$(ls -1 roles/)
          if [ -z "$ROLES" ]; then
            echo "‚ùå ERROR: No roles found!"
            exit 1
          fi

          echo "üìã Found roles: $ROLES"

          # Check each role
          FAILED=false
          for role in $ROLES; do
            echo "üî∏ Checking role: $role"
            
            # Check tasks/main.yml exists
            if [ ! -f "roles/$role/tasks/main.yml" ]; then
              echo "‚ùå ERROR: roles/$role/tasks/main.yml not found!"
              FAILED=true
            else
              echo "‚úÖ roles/$role/tasks/main.yml found"
            fi
          done

          if [ "$FAILED" = true ]; then
            echo "‚ùå ERROR: Role structure check failed!"
            exit 1
          fi

          echo "‚úÖ SUCCESS: All roles have valid structure"

      - name: Run ansible-lint
        run: |
          cd provisioning-server

          echo "üîç Running ansible-lint on roles..."

          if ansible-lint roles/; then
            echo "‚úÖ SUCCESS: Ansible-lint passed"
          else
            echo "‚ùå ERROR: Ansible-lint failed"
            exit 1
          fi

      - name: Check playbook syntax
        run: |
          cd provisioning-server

          echo "üîç Checking playbook syntax..."

          # Check if site.yml exists
          if [ ! -f "site.yml" ]; then
            echo "‚ö†Ô∏è WARNING: site.yml not found, skipping syntax check"
            exit 0
          fi

          # Create temporary inventory
          echo "localhost ansible_connection=local" > inventory.tmp

          if ansible-playbook --syntax-check -i inventory.tmp site.yml; then
            echo "‚úÖ SUCCESS: Playbook syntax is valid"
          else
            echo "‚ùå ERROR: Playbook syntax check failed"
            exit 1
          fi

          rm inventory.tmp

      - name: Summary
        if: always()
        run: |
          echo "üìä FINAL RESULT:"
          if [ "${{ job.status }}" = "success" ]; then
            echo "üéâ SUCCESS: All checks passed!"
            echo "‚úÖ Role structure: OK"
            echo "‚úÖ Ansible-lint: OK" 
            echo "‚úÖ Playbook syntax: OK"
          else
            echo "‚ùå FAILED: One or more checks failed!"
            echo "Check the logs above for details."
          fi
